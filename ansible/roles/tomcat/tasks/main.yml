---
  - name: download and extract tomcat
    unarchive:
      remote_src: yes
      src: '{{tomcat_archive_url}}'
      dest: "{{tomcat_inst_dir}}"
      creates: "{{tomcat_inst_dir}}/{{tomcat_name}}"

  - name: Check if tomcat.sh exists already
    stat:
      path: '{{ tomcat_bin }}/tomcat.sh'
    register: tomcat_script_stat_result

  - name: stop tomcat
    shell: '{{ tomcat_stop_command }}'
    when: tomcat_script_stat_result.stat.exists

  - name: create symlink
    file:
      path: '{{tomcat_home}}'
      src: '{{tomcat_name}}'
      state: link

  - name: create logs directory
    file: path='{{ tomcat_log_dir }}' state=directory
    when: (tomcat_log_dir is defined) and (tomcat_log_dir != "") and (tomcat_log_dir is not none)

  - name: Get tomcat/logs stats
    stat:
      path: '{{ tomcat_home }}/logs'
    register: tomcat_logs_stat_result

  - name: Find tomcat/logs files
    find: path='{{ tomcat_home }}/logs'
    register: tomcat_logs_files_result
    when: (tomcat_logs_stat_result.stat.isdir) and (tomcat_log_dir is defined) and (tomcat_log_dir != "") and (tomcat_log_dir is not none)

  - fail: msg='directory not empty {{ tomcat_home }}/logs'
    when: (tomcat_logs_stat_result.stat.isdir) and (tomcat_log_dir is defined) and (tomcat_log_dir != "") and (tomcat_log_dir is not none) and (tomcat_logs_files_result.matched > 0)

  - name: remove logs directory
    file: path='{{ tomcat_home }}/logs' state=absent
    when: (tomcat_logs_stat_result.stat.isdir) and (tomcat_log_dir is defined) and (tomcat_log_dir != "") and (tomcat_log_dir is not none)

  - name: create symlink for logs directory
    file:
      path: '{{ tomcat_home }}/logs'
      src: '{{ tomcat_log_dir }}'
      state: link
    when: (tomcat_log_dir is defined) and (tomcat_log_dir != "") and (tomcat_log_dir is not none)

  - name: Configure tomcat-users.xml
    template:
      src: tomcat-users.xml.j2
      dest: '{{tomcat_home}}/conf/tomcat-users.xml'

  - name: Configure server.xml
    template:
      src: server.xml
      dest: '{{tomcat_home}}/conf/server.xml'

  - name: Ensures tomcat_bin dir exists
    file: path='{{tomcat_bin}}' state=directory

  - name: Configure tomcat start-/stop-script
    template:
      src: tomcat.sh
      dest: '{{tomcat_bin}}/tomcat.sh'
      mode: 'a+x'

  - name: Creates an crontab entry "@reboot {{tomcat_bin}}/tomcat.sh"
    cron:
      name: "tomcat start at reboot"
      special_time: reboot
      job: "{{tomcat_bin}}/tomcat.sh start"

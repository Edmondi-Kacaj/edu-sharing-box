---
- name: load version variables
  with_first_found:
    - '../vars/versions/{{ edu_version }}.yml'
    - '../vars/versions/default.yml'
  include_vars: '{{ item }}'
  tags:
    - edu-sharing-config
    - shibboleth

- name: Ensures inst-dir exists
  file: path='{{edu_inst_dir}}' state=directory

- name: Copy local edu-sharing artifact
  copy:
    src: "{{ edu_sharing_local_archive_path }}"
    dest: "{{edu_inst_dir}}/edu-sharing.zip"
  when: edu_sharing_archive_retrieve_method == "copy-local"

- name: Remove old installation for local artifacts
  file: path='{{edu_home}}' state=absent
  when: edu_sharing_archive_retrieve_method == "copy-local"

- name: download edu-sharing sources
  get_url:
    url: '{{edu_sharing_archive_url}}'
    dest: "{{edu_inst_dir}}/edu-sharing.zip"
  when: edu_sharing_archive_retrieve_method == "download"

- name: Ensure unzip is present
  package:
    name: ["unzip"]
  become: yes
  tags:
  - packages
  - root-task

- name: extract edu-sharing sources
  unarchive:
    remote_src: yes
    src: '{{edu_inst_dir}}/edu-sharing.zip'
    dest: "{{edu_inst_dir}}"
    creates: "{{edu_home}}"

- name: clear optional properties in client config
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: '{{ item }}'
    state: absent
    pretty_print: yes
  loop: '{{ edu_client_config_xml_standard_entries | rejectattr("cleanup", "undefined") | map(attribute="cleanup") | list }}'
  tags: edu-sharing-config

- name: set standard entries in client config
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: '{{ item.xpath }}'
    value: '{{ item.value }}'
    pretty_print: yes
  loop: '{{ edu_client_config_xml_standard_entries | rejectattr("value", "undefined") | list }}'
  tags: edu-sharing-config

# non-standard entries in client config
- name: set banner components
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: '/config/values/banner'
    add_children: '<components>{{ item }}</components>'
    input_type: xml
    pretty_print: yes
  with_items: '{{edu_banner_components}}'
  tags: edu-sharing-config

- name: clear HelpMenuOptions
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: "/config/values/helpMenuOptions[key='{{item[0]}}']"
    state: absent
    pretty_print: yes
  loop: '{{ edu_help_menu_options | default([], true) }}'
  tags: edu-sharing-config

- name: edit HelpMenuOptions
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: "/config/values"
    add_children: '<helpMenuOptions><key>{{item[0]}}</key><icon>{{item[1]}}</icon><url>{{item[2]}}</url></helpMenuOptions>'
    input_type: xml
    pretty_print: yes
  loop: '{{ edu_help_menu_options | default([], true) }}'
  tags: edu-sharing-config

- name: set allowedLicenses
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: '/config/values'
    add_children: '<allowedLicenses>{{ item }}</allowedLicenses>'
    input_type: xml
    pretty_print: yes
  with_items: '{{edu_allowed_licenses}}'
  when: (edu_allowed_licenses != "") and (edu_allowed_licenses is not none)
  tags: edu-sharing-config

# change the view type in workspace
- name: set workspace viewType 'list view' mode
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: '/config/values/workspaceViewType'
    value: '{{ "1" if (edu_workspace_viewType | default("list")) == "tile" else "0" }}'
    pretty_print: yes
  tags: edu-sharing-config

# -------- Menu entries (BEGIN) --------#
- name: Remove all menuEntries from client config 
  xml:
    path: '{{ edu_client_config_xml_path }}'
    xpath: "/config/values/menuEntries"
    state: absent
    pretty_print: yes
  tags: edu-sharing-config

- include_tasks: custom_menu_entries.yml
  with_items: '{{ edu_custom_menu_entries | default([], true) }}'
  loop_control:
    loop_var: custom_menu_entry

# -------- Menu entries (END)-------- #

# hide main menu entries
- include: hide_main_menu.yml

- include: shibboleth_before.yml
  when: edu_configure_shibboleth is defined and edu_configure_shibboleth
  tags:
    - shibboleth
    - edu-sharing-config

- include: auth.yml
  tags: edu-sharing-config

- include: custom.yml
  when: edu_sharing_custom_installation

- name: stop alfresco
  shell: '{{ tomcat_stop_command }}'
  tags: edu-sharing-config

- include: images.yml
  tags: edu-sharing-config

- name: Ensure jq is present
  become: true
  package:
    name: ["jq"]
  tags:
  - packages
  - root-task

- include_tasks: custom-license.yml
  with_items: '{{ edu_custom_licenses | default([], true) }}'
  loop_control:
    loop_var: custom_license
#  add custom options task
- include_tasks: custom_option.yml
- name: edit i18n
  lineinfile:
    backrefs: yes
    path: '{{ edu_home }}/war//edu_sharing/assets/i18n/{{item[0]}}'
    line: '\g<start>{{item[2]}}\g<end>'
    regexp: '(?P<start>^\s*"{{item[1]}}"\s*:\s*").*(?P<end>".*)'
  loop: '{{ edu_i18n_adjustments | default([], true) }}'
  tags: edu-sharing-config
  
- name: edit enable_statistics_api in edu-sharing.properties for versions before 5.1
  lineinfile:
    path: '{{ edu_home }}/war/WEB-INF/classes/edu-sharing.properties'
    line: 'enable_statistics_api={{ edu_enable_statistics_api }}'
    regexp: '^enable_statistics_api=.*$'
  when: edu_config_file == 'edu-sharing.properties'
  tags: edu-sharing-config

- name: use custom logging configuration if available
  copy:
    src: '{{ edu_log4j_properties_path }}'
    dest: '{{ edu_home }}/war/WEB-INF/classes/log4j.properties'
  when: (edu_log4j_properties_path is defined) and (edu_log4j_properties_path != "") and (edu_log4j_properties_path is not none)
  tags: edu-sharing-config

- name: edit edu-sharing build.properties
  lineinfile:
    path: '{{ edu_home }}/build.properties'
    line: 'webserver.home={{tomcat_home}}'
    regexp: '^webserver.home=.*$'
  tags: edu-sharing-config

- name: edit edu-sharing call-ant.sh
  replace:
    path: '{{ edu_home }}/call-ant.sh'
    replace: '{{java_home}}/bin/java '
    regexp: '^java '

- name: edit edu-sharing call-ant.sh
  replace:
    path: '{{ edu_home }}/call-ant.sh'
    replace: '-classpath '
    regexp: '-Djava.ext.dirs='

- name: make edu-sharing call-ant.sh executable
  file:
    path: '{{ edu_home }}/call-ant.sh'
    mode: 'a+x'

- name: undeploy edu-sharing
  shell: '{{ edu_home }}/call-ant.sh undeploy'
  args:
    chdir: '{{ edu_home }}'
    removes: '{{ tomcat_home }}/webapps/edu-sharing'
  tags: edu-sharing-config

- name: make edu-sharing install.sh executable
  file:
    path: '{{ edu_home }}/install.sh'
    mode: 'a+x'

- name: run edu-sharing install.sh
  shell: '{{ edu_home }}/install.sh'
  args:
    chdir: '{{ edu_home }}'
  tags: edu-sharing-config

- name: Workaround - remove libs that edu-sharing installed in the last step, because it causes version conflicts
  file:
    path: "{{ tomcat_home }}/webapps/{{ item }}"
    state: absent
  loop: '{{ edu_sharing_workaround_jar_cleanup }}'

- include: plugins.yml
  tags: edu-sharing-config

- name: create edu-sharing.conf
  template:
    src: edu-sharing.conf.j2
    dest: '{{tomcat_home}}/shared/classes/config/edu-sharing.conf'
  when: edu_config_file == 'edu-sharing.conf'
  tags: edu-sharing-config

- name: remove optional lines in tomcat/shared/classes/homeApplication.properties.xml
  lineinfile:
    path: '{{ tomcat_home }}/shared/classes/homeApplication.properties.xml'
    regexp: '<entry key="{{item}}">'
    state: absent
  loop:
    - guest_username
    - guest_password
    - allowed_authentication_types
  tags: edu-sharing-config

- name: add or edit properties in tomcat/shared/classes/homeApplication.properties.xml
  lineinfile:
    path: '{{ tomcat_home }}/shared/classes/homeApplication.properties.xml'
    line: '<entry key="{{item[0]}}">{{item[1]}}</entry>'
    regexp: '<entry key="{{item[0]}}">'
    insertbefore: '</properties>'
  loop:
    - ["appid", '{{edu_repo_id}}']
    - ["appcaption", '{{edu_repo_caption}}']
    - ["clientport", '{{ edu_sharing_clientport | default("80") }}']
    - ["port", '{{ edu_sharing_port | default("80") }}']
    - ["protocol", '{{ edu_sharing_protocol | default("http") }}']
    - ["clientprotocol", '{{ edu_sharing_clientprotocol | default("http") }}']
    - ["domain", '{{edu_sharing_domain}}']
    - ["host", '{{edu_sharing_host}}']
    - ["password", '{{alf_password}}']
  tags: edu-sharing-config

- name: activate guest-user in tomcat/shared/classes/homeApplication.properties.xml
  lineinfile:
    path: '{{ tomcat_home }}/shared/classes/homeApplication.properties.xml'
    line: '<entry key="{{item[0]}}">{{item[1]}}</entry>'
    regexp: '<entry key="{{item[0]}}">'
    insertbefore: '</properties>'
  loop:
    - ["guest_username", 'esguest']
    - ["guest_password", 'esguest']
  when : 'use_esguest_user'
  tags: edu-sharing-config

- name: edit mail properties in tomcat/shared/classes/ccmail.properties.xml
  lineinfile:
    path: '{{ tomcat_home }}/shared/classes/ccmail.properties.xml'
    line: '<entry key="{{item[0]}}">{{item[1]}}</entry>'
    regexp: '<entry key="{{item[0]}}">'
    insertbefore: '</properties>'
  loop:
    - ["mail.report.receiver", '{{edu_mail_report_receiver | default("")}}']
    - ["mail.authtype", '{{ edu_mail_authtype | default("") }}']
    - ["mail.smtp.server", '{{ edu_mail_smtp_server | default("") }}']
    - ["mail.smtp.passwd", '{{ edu_mail_smtp_passwd | default("") }}']
    - ["mail.smtp.username", '{{ edu_mail_smtp_username | default("") }}']
    - ["mail.smtp.port", '{{ edu_mail_smtp_port | default("25") }}']
    - ["mail.smtp.from", '{{ edu_mail_smtp_from | default("pleasechange@nodomain.com") }}']
  tags: edu-sharing-config

- include: shibboleth_after.yml
  when: edu_configure_shibboleth is defined and edu_configure_shibboleth
  tags:
    - shibboleth
    - edu-sharing-config

- include: metadatasets.yml
  tags: edu-sharing-config

- include: model.yml
  tags: edu-sharing-config

- include: lms.yml
  tags: edu-sharing-config

- name: Copy mail template
  copy:
    src: '{{item}}'
    dest: '{{ tomcat_home }}/shared/classes/org/edu_sharing/repository/server/tools/mailtemplates/'
  when: (edu_sharing_mail_templates_override is defined) and (edu_sharing_mail_templates_override != "") and (edu_sharing_mail_templates_override is not none)
  with_items: '{{edu_sharing_mail_templates_override}}'
  tags: edu-sharing-config

- name: start alfresco
  shell: '{{tomcat_start_command}}'
  tags: edu-sharing-config

---
- name: add replace-mapping-jobs to list of all jobs
  set_fact:
    edu_jobs_all: "{{ edu_jobs_all | default([], true) + [{'jobClass': 'org.edu_sharing.repository.server.jobs.quartz.BulkEditNodesJob', 'params': {'startFolder': item.startFolder, 'mode': 'ReplaceMapping', 'property': item.property, 'types': 'ccm:io', 'recurseMode': 'All', 'FILE_DATA': item.data}}] }}"
  loop: '{{ edu_migration_replace_mapping | default([], true) }}'

- name: "wait for tomcat to come up"
  uri:
    url: '{{ edu_sharing_url }}'
    timeout: 60
    status_code: 200
  register: esresult
  until: esresult.status == 200
  retries: 5
  delay: 1
  when: edu_jobs_all | default([], true) | length>0
  
- name: "get access token"
  uri:
    url: '{{ edu_sharing_url }}/oauth2/token'
    method: POST
    body: 'grant_type=password&client_id=eduApp&client_secret=secret&username=admin&password={{ alf_password }}'
    return_content: yes
  register: accesstokenreply
  no_log: true
  when: edu_jobs_all | default([], true) | length>0

- name: "set access token"
  vars:
    jsonVar: '{{ accesstokenreply.content | from_json }}'
  set_fact:
    accesstoken: '{{ jsonVar.access_token }}'
  no_log: true
  when: edu_jobs_all | default([], true) | length>0

- name: "Execute jobs"
  uri:
    url: '{{ edu_sharing_url }}/rest/admin/v1/job/{{ item.jobClass }}'
    method: POST
    body_format: json
    headers:
      Authorization: 'Bearer {{ accesstoken }}'
      Accept: application/json
    body: '{{ item.params }}'
  no_log: true
  loop: '{{ edu_jobs_all | default([], true) }}'
  loop_control:
    pause: 5
  when: edu_jobs_all | default([], true) | length>0

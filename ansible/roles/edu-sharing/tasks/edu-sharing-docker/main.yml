---

- name: Ensure tomcat is stopped.
  shell: "{{tomcat_stop_command}}"

- name: Stop all edu-sharing containers.
  shell: |
    sg docker -c "docker ps -a --format '{{ '{{' }}.Names{{ '}}' }}' | grep -E 'edu[-_]sharing' | xargs -r docker stop "

- set_fact: edu_docker_inst_dir="{{ edu_inst_dir|replace('.','_') }}"

- name: Load version variables.
  with_first_found:
    - "../vars/versions/{{ edu_version }}.yml"
    - "../vars/versions/default.yml"
  include_vars: "{{ item }}"

- name: Check if Migration has been installed before
  shell: "echo ${HAS_EDU_SHARING_DOCKER_MIGRATION_PROCESSED:-false}"
  register: has_been_migrated

- name: Get edu-sharing version in server.
  shell: "echo ${EDU_SHARING_VERSION:-}"
  register: edu_sharing_version

- name: Ensures inst-dir exists.
  file: path='{{edu_docker_inst_dir}}' state=directory

- name: Remove old installation for local artifacts.
  file: path='{{edu_docker_inst_dir}}' state=absent
  when: edu_sharing_archive_retrieve_method == "copy-local"

- name: Copy local edu-sharing artifact.
  copy:
    src: "{{ edu_sharing_local_archive_path }}"
    dest: "{{edu_docker_inst_dir}}/edu-sharing.zip"
  when: edu_sharing_archive_retrieve_method == "copy-local"

- name: Download edu-sharing sources.
  get_url:
    url: "{{edu_sharing_archive_url}}"
    dest: "{{edu_docker_inst_dir}}/edu-sharing.zip"
  when: edu_sharing_archive_retrieve_method == "download"

- name: Extract edu-sharing sources.
  unarchive:
    remote_src: yes
    src: "{{edu_docker_inst_dir}}/edu-sharing.zip"
    dest: "{{edu_docker_inst_dir}}"
    creates: "{{edu_home}}"

- include: clean-edu-sharing-volumes.yml
  when: edu_sharing_version.stdout is defined and 
        edu_sharing_version.stdout != edu_version


- name: Copy override files.
  template:
    src: '3_repository-service-volume-override.yml'
    dest: '{{edu_docker_inst_dir}}/3_repository-service-volume-override.yml'
  when: edu_version is defined and  edu_version is version_compare('8.0.0','<')

- name: Copy override files.
  template:
    src: 'docker-compose.override.yml'
    dest: '{{edu_docker_inst_dir}}/docker-compose.override.yml'
  when: edu_version is defined and  edu_version is version_compare('8.0.0','>=')

- include_tasks: model.yml

- name: Stop all docker images and containers.
  shell: "{{edu_sharing_undeploy_command}}"
  args:
    chdir: "{{edu_docker_inst_dir}}/"

- name: Copy .env.sample to .env.
  command:
    chdir: "{{ edu_docker_inst_dir }}"
    cmd: "cp -f .env.sample .env"

- name: Adjust values in .env file.
  lineinfile:
    path: "{{ edu_docker_inst_dir }}/.env"
    state: present
    regexp: "^# {{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  no_log: true
  when: item.value is defined and item.value != ""
  loop: "{{ edu_sharing_environment_variable | default([], true) }}"

- name: Start migration.
  include: migrate-edu-sharing.yml
  when: has_been_migrated.stdout and not has_been_migrated.stdout|bool

- name: Launch edu-sharing in docker.
  command:
    chdir: "{{ edu_docker_inst_dir }}"
    cmd: "{{edu_sharing_deploy_command}}"
  no_log: true

- include: edu-sharing-config-file.yml
- include: edu-sharing-assets.yml
- include: client-configuration.yml
- include: ./common/mirror-vocabs.yml
  when: mirror_vocabularies | default([], true) | length>0
  tags:
    - edu-sharing-config
    - mirror-vocabularies
    
- include: ./common/classification-keyword.yml
  become: true
  when: activate_classification_keywords is defined and activate_classification_keywords
  tags:
    - edu-sharing-config
    - classification-keyword

- name: Launch edu-sharing in docker.
  command:
    chdir: "{{ edu_docker_inst_dir }}"
    cmd: "{{edu_sharing_deploy_command}}"
  no_log: true

- include: ./common/jobs.yml
    jobs_edu_sharing_url="{{edu_sharing_url}}"
  tags:
    - edu-sharing-config
    - jobs

- name: Clean unused edu-sharing images, containers, networks and cashes.
  command: | 
    sg docker "docker system prune --all --force --filter "label=edu-sharing" --filter "label=edu_sharing""
  tags:
    - edu-sharing-config
---

- name: Ensure tomcat is stopped.
  shell: "{{tomcat_stop_command}}"

- set_fact: edu_docker_inst_dir="{{ edu_inst_dir|replace('.','_') }}"

- name: Load version variables.
  with_first_found:
    - "../vars/versions/{{ edu_version }}.yml"
    - "../vars/versions/default.yml"
  include_vars: "{{ item }}"

- name: Check if Migration has been installed before
  shell: "echo ${HAS_EDU_SHARING_DOCKER_MIGRATION_PROCESSED:-false}"
  register: has_been_migrated

- name: Ensures inst-dir exists.
  file: path='{{edu_docker_inst_dir}}' state=directory

- name: Remove old installation for local artifacts.
  file: path='{{edu_docker_inst_dir}}' state=absent
  when: edu_sharing_archive_retrieve_method == "copy-local"

- name: Copy local edu-sharing artifact.
  copy:
    src: "{{ edu_sharing_local_archive_path }}"
    dest: "{{edu_docker_inst_dir}}/edu-sharing.zip"
  when: edu_sharing_archive_retrieve_method == "copy-local"

- name: Download edu-sharing sources.
  get_url:
    url: "{{edu_sharing_archive_url}}"
    dest: "{{edu_docker_inst_dir}}/edu-sharing.zip"
  when: edu_sharing_archive_retrieve_method == "download"

- name: Ensure 'unzip' and 'jq' is present.
  package:
    name:
      - unzip
      - jq
  become: yes
  tags:
    - packages
    - root-task

- name: Extract edu-sharing sources.
  unarchive:
    remote_src: yes
    src: "{{edu_docker_inst_dir}}/edu-sharing.zip"
    dest: "{{edu_docker_inst_dir}}"
    creates: "{{edu_home}}"

- name: Copy override files.
  template:
    src: '4_repository-service-volume-override-common.yml'
    dest: '{{edu_docker_inst_dir}}/4_repository-service-volume-override-common.yml'

- name: Stop all docker images and containers.
  shell: "{{edu_sharing_undeploy_command}}"
  args:
    chdir: "{{edu_docker_inst_dir}}/"

- name: Copy .env.sample to .env.
  command:
    chdir: "{{ edu_docker_inst_dir }}"
    cmd: "cp -f .env.sample .env"

- name: Adjust values in .env file.
  lineinfile:
    path: "{{ edu_docker_inst_dir }}/.env"
    state: present
    regexp: "^# {{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  no_log: true
  with_items: "{{ edu_sharing_environment_variable }}"

- name: Start migration.
  include: migrate-edu-sharing.yml
  when: has_been_migrated.stdout and not has_been_migrated.stdout|bool

- name: Launch edu-sharing in docker.
  command:
    chdir: "{{ edu_docker_inst_dir }}"
    cmd: "{{edu_sharing_deploy_command}}"
  no_log: true

- include: edu-sharing-config-file.yml
- include: edu-sharing-assets.yml
- include: client-configuration.yml

- name: Launch edu-sharing in docker.
  command:
    chdir: "{{ edu_docker_inst_dir }}"
    cmd: "{{edu_sharing_deploy_command}}"
  no_log: true

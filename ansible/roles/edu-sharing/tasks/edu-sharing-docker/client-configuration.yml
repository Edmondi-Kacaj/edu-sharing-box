---
- name: Get the path to the edu-sharing config docker volume.
  shell: |
    sg docker -c "docker volume inspect --format '{{ '{{' }}.Mountpoint{{ '}}' }}'  $(sg docker -c "docker volume ls -q |grep '_repository-service-volume-config-node'")"
  register: edu_sharing_client_xml_path
  tags:
    - edu-sharing-config


- include: ./common/client-configuration.yml
    client_configuration_path='{{edu_sharing_client_xml_path.stdout}}/defaults/client.config.xml'
  become: yes
  when: edu_sharing_client_xml_path.stdout is defined and edu_sharing_client_xml_path.stdout != ""
  tags:
    - edu-sharing-config
    - client-configuration

- include: ./common/metadatasets.yml
    metadatasets_directory_path='{{edu_sharing_client_xml_path.stdout}}/defaults/metadatasets'
  become: yes
  when: edu_sharing_client_xml_path.stdout is defined and edu_sharing_client_xml_path.stdout != ""
  tags:
    - edu-sharing-config
    - metadatasets

- include: custom-menu-entries.yml
    custom_menu_entries_path='{{edu_sharing_client_xml_path.stdout}}'
  become: yes
  when: ( edu_sharing_client_xml_path.stdout is defined and edu_sharing_client_xml_path.stdout != "")        
  tags:
    - edu-sharing-config
    - custom-menu-entries

- include: ./common/hide_main_menu.yml
    hide_main_menu_config_xml_path='{{edu_sharing_client_xml_path.stdout}}/defaults/client.config.xml'
  become: yes
  when: edu_sharing_client_xml_path.stdout is defined and edu_sharing_client_xml_path.stdout != ""
  tags:
    - edu-sharing-config
    - hide-main-menu


- include: ./common/custom_option.yml
    custom_option_config_xml_path='{{edu_sharing_client_xml_path.stdout}}/defaults/client.config.xml'
  become: yes
  when: edu_sharing_client_xml_path.stdout is defined and edu_sharing_client_xml_path.stdout != ""
  tags:
    - edu-sharing-config
    - custom-option


- include_tasks: ./common/custom-license.yml
  args:
    apply:
      become: yes
  vars:
    custom_license_client_config_xml_path: "{{edu_sharing_client_xml_path.stdout}}/defaults/client.config.xml"
    custom_license_edu_sharing_assets: "{{edu_sharing_assets_path.stdout}}"
  with_items: '{{ edu_custom_licenses | default([], true) }}'
  when: (edu_sharing_client_xml_path.stdout is defined and edu_sharing_client_xml_path.stdout != "") and
        (edu_sharing_assets_path.stdout is defined) and (edu_sharing_assets_path.stdout != "")
  loop_control:
    loop_var: custom_license
  tags:
    - edu-sharing-config
    - custom-license

- include: ./common/mail-templates.yml
    mail_templates_path="{{edu_sharing_client_xml_path.stdout}}/defaults/mailtemplates"
  become: yes
  when: edu_sharing_client_xml_path.stdout is defined and edu_sharing_client_xml_path.stdout != ""
  tags:
    - edu-sharing-config
    - mail-templates

- name: Get the path to the Edu-sharing config docker volume.
  shell: |
    sg docker -c "docker volume inspect --format '{{ '{{' }}.Mountpoint{{ '}}' }}'  $(sg docker -c "docker volume ls -q |grep '_repository-service-volume-config-edu-sharing'")"
  register: edu_sharing_repository_service_config_path_result
  ignore_errors: true
  tags:
    - edu-sharing-config

- include: ./common/shibboleth_before.yml
    shibboleth_before_client_config_path='{{edu_sharing_client_xml_path.stdout}}/defaults/client.config.xml'
    edu_sharing_webapp_webinf_classes_path='{{ edu_sharing_repository_service_config_path_result.stdout }}/WEB-INF/classes'
    edu_sharing_webapp_lib_path='{{ edu_sharing_repository_service_config_path_result.stdout }}/WEB-INF/lib'
  become: yes
  when: (edu_configure_shibboleth is defined and edu_configure_shibboleth) and
        (edu_sharing_client_xml_path.stdout is defined) and (edu_sharing_client_xml_path.stdout != "")
  tags:
    - edu-sharing-config
    - shibboleth

---
- name: Set up dbType
  become: yes
  shell: '{{ onlyoffice.json}} -I -e ''this.services.CoAuthoring.sql.type  = "{{ onlyoffice.db_type }}"'''
  notify: restart onlyoffice
  when: (onlyoffice.db_type is defined) and (onlyoffice.db_type != "") and (onlyoffice.db_type is not none)

- name: Set up dbHost
  become: yes
  shell: '{{ onlyoffice.json}} -I -e ''this.services.CoAuthoring.sql.dbHost  = "{{ onlyoffice.db_host }}"'''
  notify: restart onlyoffice
  when: (onlyoffice.db_host is defined) and (onlyoffice.db_host != "") and (onlyoffice.db_host is not none)

- name: Set up dbPort
  become: yes
  shell: '{{ onlyoffice.json}} -I -e ''this.services.CoAuthoring.sql.dbPort  = "{{ onlyoffice.db_port }}"'''
  notify: restart onlyoffice
  when: (onlyoffice.db_port is defined) and (onlyoffice.db_port != "") and (onlyoffice.db_port is not none)

- name: Set up DB dbName
  become: yes
  shell: '{{ onlyoffice.json}} -I -e ''this.services.CoAuthoring.sql.dbName  = "{{ onlyoffice.db_name }}"'''
  notify: restart onlyoffice
  when: (onlyoffice.db_name is defined) and (onlyoffice.db_name != "") and (onlyoffice.db_name is not none)

- name: Set up DB dbUser
  become: yes
  shell: '{{ onlyoffice.json}} -I -e ''this.services.CoAuthoring.sql.dbUser  = "{{ onlyoffice.db_user }}"'''
  notify: restart onlyoffice
  when: (onlyoffice.db_user is defined) and (onlyoffice.db_user != "") and (onlyoffice.db_user is not none)

- name: Set up DB dbPass
  become: yes
  shell: '{{ onlyoffice.json}} -I -e ''this.services.CoAuthoring.sql.dbPass  = "{{ onlyoffice.db_password }}"'''
  notify: restart onlyoffice
  when: (onlyoffice.db_password is defined) and (onlyoffice.db_password != "") and (onlyoffice.db_password is not none)

# Rabbit MQ configuration

- name: Set up rabbitmq url
  become: yes
  shell: '{{ onlyoffice.json}} -I -e ''this.rabbitmq.url  = "{{ onlyoffice.rabbitmq_url }}"'''
  notify: restart onlyoffice
  when: (onlyoffice.rabbitmq_url is defined) and (onlyoffice.rabbitmq_url != "") and (onlyoffice.rabbitmq_url is not none)
